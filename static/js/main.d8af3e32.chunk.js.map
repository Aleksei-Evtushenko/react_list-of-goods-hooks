{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSort","isReversed","setRevers","visibleGoods","goods","sort","productA","productB","LENGTH","length","ALPABET","localeCompare","reverse","getReorderedGoods","hiddeResetButton","className","type","classNames","onClick","map","product","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAA4BC,mBAASH,EAASI,MAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EA7BD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,WAENE,EAAY,YAAOC,GAmBzB,OAjBAD,EAAaE,MAAK,SAACC,EAAUC,GAC3B,OAAQR,GACN,KAAKL,EAASc,OACZ,OAAOF,EAASG,OAASF,EAASE,OAEpC,KAAKf,EAASgB,QACZ,OAAOJ,EAASK,cAAcJ,GAEhC,QACE,OAAO,MAITN,GACFE,EAAaS,UAGRT,EAMcU,CACnBlB,EAAiB,CAAEI,WAAUE,eAGzBa,EAAmBf,IAAaL,EAASI,MAAQG,EAEvD,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYlB,IAAaL,EAASgB,UAEtCQ,QAAS,kBAAMlB,EAAQN,EAASgB,UANlC,iCAWA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYlB,IAAaL,EAASc,SAEtCU,QAAS,kBAAMlB,EAAQN,EAASc,SANlC,4BAWA,wBACEQ,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAahB,IAEjBiB,QAAS,kBAAMhB,GAAWD,IAN5B,qBAWEa,GACA,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPlB,EAAQN,EAASI,MACjBI,GAAWD,IALf,sBAcJ,6BACE,6BACGE,EAAagB,KAAI,SAAAC,GAAO,OACvB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,cCpHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d8af3e32.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((productA, productB) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return productA.length - productB.length;\n\n      case SortType.ALPABET:\n        return productA.localeCompare(productB);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSort] = useState(SortType.NONE);\n  const [isReversed, setRevers] = useState(false);\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer, { sortType, isReversed },\n  );\n\n  const hiddeResetButton = sortType !== SortType.NONE || isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPABET },\n          )}\n          onClick={() => setSort(SortType.ALPABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => setSort(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setRevers(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(hiddeResetButton) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSort(SortType.NONE);\n              setRevers(!isReversed);\n            }}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(product => (\n            <li\n              key={product}\n              data-cy=\"Good\"\n            >\n              {product}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}